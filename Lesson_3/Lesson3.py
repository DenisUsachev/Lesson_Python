"""СОРТИРОВКА И СОРТИРОВКА СЛИЯНИЯ"""
"""Функция - объявляется при многоразовом использованием какого-то кода обозначается как
def sum_numbers(n):  - название функции (аргумент для передачи)
# Пример № 1 """
def sum_numbers(n, y = 'Hello'): # Мы можем поставить значение по умолчанию, но если мы укажем значение как в 16 строке, то 'y' - поменяет своё значение
    print(y)
    summ = 0
    for i in range(1,n + 1):
        summ += i
    return summ # возвращает значение суммы было 5 стало 15
    print('Stop') #Не выведет, так как return завершает фукцияя после возвращения значения

print(sum_numbers(5))
# второй способ:
a = sum_numbers(5)
print(a, 'querty')

"""Пример № 2 - передача от множества букв до единого целого (ФУНКЦИЯ БУДЕТ ПРИНИМАТЬ НЕОГРАНИЧЕННОЕ КОЛ-ВО ЭЛЕМЕНТОВ)"""
def sum_st(*args): # '*' название (ПРИНИМАЕТ НЕОГРАНИЧЕННОЕ КОЛ-ВО ЭЛЕМЕНТОВ)
    res = ''
    for i in args:
        res += i
    return res

print(sum_st('q', 'e', 'l')) # qel
print(sum_st('q', 'e', 'l', 'r', 'f')) # qelrf
print(sum_st(1, 8, 9))

"""Далее мы создает модуль (наприр как функция max или .append) в файле modul.py"""

"пример рукурсии recursion.py"

"Быстрая сортировка quick_sort.py"

"Сортировка слияния merge_sort.py"